{"version":3,"sources":["components/CustomLoginPage.js","components/useLongPress.js","components/UrlPost.js","components/UrlPostEdit.js","components/firebaseLoad.js","components/Post.js","components/UrlGaleria.js","components/UrlGaleriaEdit.js","components/Galeria.js","App.js","serviceWorker.js","index.js"],"names":["CustomLoginForm","props","style","fontFamily","marginLeft","LoginForm","href","className","CustomLoginPage","Login","useLongPress","callback","ms","useState","startLongPress","setStartLongPress","useEffect","timerId","setTimeout","clearTimeout","onMouseDown","onMouseUp","onMouseLeave","onTouchStart","onTouchEnd","UrlPost","record","source","imgs","setImgs","ar","Object","values","map","e","i","key","UrlPostEdit","setImgState","acceptMultiple","label","placeholder","validate","removeImage","isCancelled","console","log","setImagens","onDrop","useCallback","acceptedFiles","forEach","file","push","URL","createObjectURL","useDropzone","accept","multiple","noClick","getRootProps","getInputProps","open","isDragActive","type","onClick","alt","src","splice","removeImg","firebase","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","urlToFile","url","a","fetch","then","r","blob","validatePost","errors","title","content","date","PostFilter","Filter","TextInput","alwaysOn","CustomDeleteButton","useMutation","resource","payload","id","deleteAction","loading","Button","startIcon","variant","disabled","CustomList","ids","data","basePath","handleLongPress","setId","backspaceLongPress","margin","ListItem","ListItemText","multiline","primary","TextField","secondary","published","EditButton","defaultProps","ListPost","showDialog","setShowDialog","isSmall","useMediaQuery","theme","breakpoints","down","Dialog","fullWidth","onClose","aria-label","DialogTitle","DialogActions","List","filters","newId","Datagrid","rowClick","ImageField","DateField","BooleanField","CreatePost","message","setMessage","openMessage","setOpenMessage","success","setSuccess","imgsmall","setImgsmall","SaveWithImagesButton","useCreate","create","redirectTo","useRedirect","notify","useNotify","handleSave","redirect","small","uploadTask","ref","put","on","snapshot","progress","bytesTransferred","totalBytes","error","getDownloadURL","downloadURL","index","img","uploadTask2","downloadURL2","onSuccess","newRecord","smart_count","SaveButton","onSave","PostEditToolbar","Toolbar","Create","SimpleForm","toolbar","defaultValue","React","useMemo","Math","random","toString","substr","value","DateInput","BooleanInput","Snackbar","autoHideDuration","Alert","severity","EditPost","removedImgs","setRemovedImgs","removeFromDB","srcs","Array","isArray","search","refFromURL","delete","err","message_","useUpdate","update","undefined","isEnter","newImgs","filter","Edit","UrlGaleriaEdit","onChange","el","target","handleTitleChange","validateGaleria","name","GaleriaFilter","Date","lastupdate","toLocaleDateString","ListGaleria","EditGaleria","GaleriaEditToolbar","CreateGaleria","titles","config","options","logging","dataProvider","FirebaseDataProvider","authProvider","FirebaseAuthProvider","i18nProvider","polyglotI18nProvider","ptBrMessages","App","Admin","loginPage","Resource","list","edit","icon","GaleriaIcon","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.d0b57f9a.chunk.js","sourcesContent":["// LoginPage.js\r\nimport React from \"react\";\r\nimport { Login, LoginForm } from \"react-admin\";\r\nimport Button from '@material-ui/core/Button';\r\n//import StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\n//import firebase from 'firebase';\r\n//import ForgotPasswordButton from './CustomForgotPassword'\r\n\r\n/* Configure FirebaseUI.\r\nconst uiConfig = {\r\n  // Popup signin flow rather than redirect flow.\r\n  signInFlow: 'popup',\r\n  // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\r\n  signInSuccessUrl: '#/',\r\n  // We will display Google and Facebook as auth providers.\r\n  signInOptions: [\r\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID\r\n  ]\r\n};*/\r\n\r\n//const SignInScreen = () => <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()}/>;\r\n\r\nconst CustomLoginForm = props => (\r\n  <div>\r\n    <div style={{fontFamily: \"monospace\", marginLeft: '15px'}}>\r\n      <p>Digite seu email e senha cadastrados</p>\r\n    </div>\r\n    <LoginForm {...props} />\r\n    <a href=\"https://altieriescultor.com/\" className=\"goToSite\">IR PARA O SITE</a>\r\n  </div>\r\n);\r\n\r\nconst CustomLoginPage = props => (\r\n  <Login {...props}>\r\n    <CustomLoginForm {...props}/>\r\n  </Login>\r\n);\r\n\r\nexport default CustomLoginPage;","import { useState, useEffect } from 'react';\r\n\r\nexport default function useLongPress(callback = () => {}, ms = 300) {\r\n  const [startLongPress, setStartLongPress] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let timerId;\r\n    if (startLongPress) {\r\n      timerId = setTimeout(callback, ms);\r\n    } else {\r\n      clearTimeout(timerId);\r\n    }\r\n\r\n    return () => {\r\n      clearTimeout(timerId);\r\n    };\r\n  }, [callback, ms, startLongPress]);\r\n  \r\n  return {\r\n    onMouseDown: () => setStartLongPress(true),\r\n    onMouseUp: () => setStartLongPress(false),\r\n    onMouseLeave: () => setStartLongPress(false),\r\n    onTouchStart: () => setStartLongPress(true),\r\n    onTouchEnd: () => setStartLongPress(false),\r\n  };\r\n}","import React,{useState,useEffect} from 'react';\r\n\r\nexport default function UrlPost({ record = {}, source }){\r\n    \r\n    const [imgs,setImgs]=useState([]);\r\n\r\n    useEffect(()=>{\r\n\r\n      if(record[source]){\r\n      if(typeof record[source] !== 'object'){\r\n          var ar=[record[source]];\r\n              setImgs(ar);\r\n      }else{\r\n          setImgs(Object.values(record[source]));\r\n      }}   \r\n\r\n    },[record,source]);\r\n\r\n    return(\r\n        <>\r\n        {imgs.map((e,i)=>\r\n          <div className=\"urlPost\" key={i}><a href={e} >{i}</a></div>\r\n        )}\r\n        </>\r\n    );\r\n}\r\n","import React,{useState,useCallback,useEffect} from 'react';\r\nimport {useDropzone} from 'react-dropzone';\r\n//import {FileInput} from 'react-admin';\r\n//import {storage} from 'firebase/storage';\r\n\r\n\r\nexport default function UrlPostEdit({ record = {}, source ,setImgState,acceptMultiple,label,placeholder,validate,removeImage}){\r\n\r\n    const [imgs,setImgs]=useState([]);\r\n\r\n    useEffect(()=>{\r\n        var isCancelled=false;\r\n        function setImagens(){\r\n        var ar;\r\n        if(record[source]){\r\n        if(typeof record[source] !== 'object'){\r\n                ar=[record[source]];\r\n                if(!isCancelled){\r\n                setImgs(ar);\r\n                }\r\n        }else{\r\n            ar=Object.values(record[source]);\r\n            if(!isCancelled){\r\n            setImgs(ar);\r\n            }\r\n        }}   \r\n        console.log(record);\r\n        }\r\n        setImagens();\r\n        return () => {\r\n            isCancelled = true;\r\n        }; \r\n    },[record,source]);\r\n        \r\n    const onDrop = useCallback(acceptedFiles => {   \r\n        var ar=imgs;\r\n        console.log(ar);\r\n        acceptedFiles.forEach(file => {\r\n            if(acceptMultiple){\r\n                ar.push(URL.createObjectURL(file));\r\n            }else{\r\n                ar=[URL.createObjectURL(file)];\r\n            }\r\n        });\r\n        setImgs(ar);\r\n        if(setImgState){\r\n            setImgState(ar);\r\n        }\r\n        if(typeof validate !== 'undefined'){\r\n        validate(ar);\r\n        }\r\n        console.log(ar);\r\n      },[imgs,validate,setImgState,acceptMultiple]);\r\n    \r\n    function removeImg(i){\r\n        var ar=imgs;\r\n        removeImage(imgs[i]);\r\n        ar.splice(i,1)\r\n        setImgs(ar);\r\n        if(setImgState){\r\n            setImgState(ar);\r\n        }\r\n    }\r\n\r\n    const {getRootProps, getInputProps, open,isDragActive} = useDropzone({accept: 'image/*',multiple:acceptMultiple,noClick: true,onDrop});\r\n    \r\n    return(\r\n        <>\r\n            <label className=\"MuiFormLabel-root MuiInputLabel-root  \">\r\n                <span>{label}</span></label>\r\n                <div {...getRootProps()} className=\"UrlPostEditContainer\"> \r\n                    <input {...getInputProps()} />\r\n                    {\r\n                    isDragActive ?\r\n                    <p>{placeholder}</p> :\r\n                    <>\r\n                    <p>{placeholder}</p>\r\n                    <button type=\"button\" onClick={open}>Clique para selecionar</button>\r\n                    </>\r\n                    }\r\n                    <div className=\"preview\">\r\n                    {typeof imgs === 'object' && imgs.map((e,i)=>\r\n                        <div className=\"imageContainer\" key={i}><img alt=\"imagem\" src={e} className=\"imgEdit\" />\r\n                        <span className=\"btnDeleteImage\" onClick={()=>removeImg(i)}>X</span></div>\r\n                    )}\r\n                    </div>\r\n                </div>\r\n        </>\r\n    );\r\n}\r\n","import firebase from '@firebase/app';\r\nimport '@firebase/storage';   \r\n\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyD46nX4-Ks9WMiQ1hazUe2PZAkGX_Cq7kQ\",\r\n    authDomain: \"altiereescultor.firebaseapp.com\",\r\n    databaseURL: \"https://altiereescultor.firebaseio.com\",\r\n    projectId: \"altiereescultor\",\r\n    storageBucket: \"altiereescultor.appspot.com\",\r\n    messagingSenderId: \"851171901718\",\r\n    appId: \"1:851171901718:web:3f1bf7c3d4867dc7d25037\",\r\n    measurementId: \"G-D5SPTWZ2H0\"\r\n  };\r\n\r\n  if (!firebase.apps.length) {\r\n    firebase.initializeApp(config);\r\n    }\r\n\r\n    const storage = firebase.storage();\r\n    export  {\r\n        storage, firebase as default\r\n      }","import React, { useState, useCallback, Fragment } from 'react';\r\nimport { List, Edit, Datagrid, useMutation,EditButton, TextField, ImageField, DateField, BooleanField, Filter, Create, SimpleForm, TextInput, DateInput, BooleanInput, Toolbar, SaveButton, useCreate, useRedirect, useNotify, useUpdate } from 'react-admin';\r\nimport { useMediaQuery, ListItem, ListItemText ,Button as ButtonMui,Snackbar } from '@material-ui/core';\r\nimport useLongPress from './useLongPress';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport UrlPost from './UrlPost';\r\nimport UrlPostEdit from './UrlPostEdit';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { storage } from \"./firebaseLoad\";\r\n\r\n\r\nasync function urlToFile(url) {\r\n    //A Blob() is almost a File() - it's just missing the two properties below which we will add\r\n    return fetch(url).then(r => r.blob());\r\n}\r\n\r\nconst validatePost = (values) => {\r\n    const errors = {};\r\n    if (!values.title) {\r\n        errors.title = ['É necessário preencher o título'];\r\n    }\r\n    if (!values.content) {\r\n        errors.content = ['É necessário preencher o conteúdo'];\r\n    }\r\n    if (!values.date) {\r\n        errors.date = ['É necessário uma data'];\r\n    }\r\n    return errors;\r\n};\r\n\r\nconst PostFilter = (props) => (\r\n    <Filter {...props}>\r\n        <TextInput label=\"Pesquisar\" source=\"title\" alwaysOn />\r\n    </Filter>\r\n);\r\n\r\nconst CustomDeleteButton = (props) => {\r\n    console.log(props);\r\n    const [deleteAction, { loading }] = useMutation({\r\n        type: 'delete',\r\n        resource: 'colecao',\r\n        payload: { id: props.id}\r\n    });\r\n    console.log(loading);\r\nreturn <ButtonMui  startIcon={<DeleteIcon />} onClick={deleteAction} variant=\"contained\" className=\"deleteButton\" disabled={loading}>Excluir</ButtonMui>;\r\n};\r\n\r\nconst CustomList = ({ ids, data,basePath,handleLongPress,setId}) => {\r\n    const backspaceLongPress = useLongPress(() => handleLongPress(true), 500);\r\n    function handleMouseDown(e) {\r\n        console.log(e);\r\n        setId(e)\r\n        backspaceLongPress.onMouseDown();\r\n    }\r\n    function handleTouchStart(e) {\r\n        console.log(e);\r\n        setId(e)\r\n        backspaceLongPress.onTouchStart();\r\n    }\r\n    return(\r\n    <div style={{ margin: '1em' }}>\r\n        {ids.map(id =>\r\n            <ListItem key={id} onMouseDown={()=>handleMouseDown(id)}\r\n            onMouseUp={()=>backspaceLongPress.onMouseUp()}\r\n            onMouseLeave={()=>backspaceLongPress.onMouseLeave()}\r\n            onTouchStart={()=>handleTouchStart(id)}\r\n            onTouchEnd={()=>backspaceLongPress.onTouchEnd()}>\r\n                <ListItemText multiline=\"true\" primary={<TextField source=\"title\" record={data[id]} />}\r\n                    secondary={`${data[id].published ? (\"Publicado\") : (\"Não Publicado\")}`}/>\r\n                <ListItemText multiline=\"true\" primary={<TextField source=\"date\" record={data[id]} />}/>\r\n                <EditButton resource=\"posts\" basePath={basePath} record={data[id]} />\r\n            </ListItem>\r\n        )}\r\n    </div>\r\n)};\r\nCustomList.defaultProps = {\r\n    data: {},\r\n    ids: [],\r\n};\r\n\r\nexport const ListPost = (props) => {\r\n    console.log(props);\r\n    const [showDialog, setShowDialog] = useState(false);\r\n    const [id, setId] = useState('');\r\n    const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\r\n    function handleLongPress(e) {\r\n        console.log(\"LONG PRESS\");\r\n\r\n        setShowDialog(e);\r\n    }\r\n    function handleSetId(newId){\r\n        setId(newId);\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <Dialog\r\n                fullWidth\r\n                open={showDialog}\r\n                onClose={() => handleLongPress(false)}\r\n                aria-label=\"Excluir post\"\r\n            >\r\n                <DialogTitle>Deseja excluir o post?</DialogTitle>\r\n                <DialogActions>\r\n                    <CustomDeleteButton id={id} />\r\n                </DialogActions>\r\n            </Dialog>\r\n            <List {...props} title=\"Posts\" filters={<PostFilter />} >\r\n                {isSmall ? (\r\n                    <CustomList handleLongPress={handleLongPress} setId={handleSetId}/>\r\n                ) : (\r\n                        <Datagrid rowClick=\"edit\" >\r\n                            <TextField source=\"id\" />\r\n                            <TextField source=\"title\" label=\"Título\" />\r\n                            <TextField source=\"content\" label=\"Conteúdo\" />\r\n                            <ImageField source=\"imgsmall\" />\r\n                            <UrlPost source=\"imgs\" />\r\n                            <DateField source=\"date\" label=\"Data\" />\r\n                            <BooleanField source=\"published\" label=\"Publicado\" />\r\n                            <DateField source=\"lastupdate\" label=\"Atualizado em\" />\r\n                        </Datagrid>\r\n                    )}\r\n            </List>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport const CreatePost = (props) => {\r\n\r\n\r\n    const [message, setMessage] = useState('');\r\n    const [openMessage, setOpenMessage] = useState(false);\r\n    const [success, setSuccess] = useState(false);\r\n    const [imgs, setImgs] = useState([]);\r\n    const [imgsmall, setImgsmall] = useState('');\r\n\r\n    var makeID = function (toSet) {\r\n        var newId = Math.random().toString(36).substr(2, 9);\r\n        return newId;\r\n    };\r\n\r\n    const SaveWithImagesButton = (props) => {\r\n        const [create] = useCreate('colecao');\r\n        const redirectTo = useRedirect();\r\n        const notify = useNotify();\r\n        const { basePath } = props;\r\n\r\n        const handleSave = useCallback(\r\n            async function (values, redirect) {\r\n                console.log(values);\r\n                console.log(props.imgs);\r\n                console.log(props.imgsmall);\r\n                var imgsmall = props.imgsmall;\r\n                var imgs = props.imgs;\r\n                var id = values.id;\r\n                var title = values.title;\r\n                var small = await urlToFile(imgsmall);\r\n                var ar = { imgsmall: '', imgs: [] };\r\n                const uploadTask = storage.ref(`/colecao/${id}/imgsmall/${title}`)\r\n                    .put(small);\r\n                uploadTask.on('state_changed', function (snapshot) {\r\n                    var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                    console.log('Upload is ' + progress + '% done for imgsmall');\r\n                    setMessage('Upload is ' + progress + '% done for imgsmall');\r\n                    setSuccess(true);\r\n                    setOpenMessage(true);\r\n                }, function (error) {\r\n                    setMessage('Upload error: ' + error + ' for imgsmall');\r\n                    setSuccess(false);\r\n                    setOpenMessage(true);\r\n                }, function () {\r\n                    uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\r\n                        console.log('File available at', downloadURL);\r\n                        ar.imgsmall = downloadURL;\r\n                        var index = 0;\r\n                        imgs.forEach(async (e, i) => {\r\n                            var img = await urlToFile(e);\r\n                            var uploadTask2 = storage.ref(`/colecao/${id}/imgs/${title}-${i}`)\r\n                                .put(img);\r\n                            uploadTask2.on('state_changed', function (snapshot) {\r\n                                var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                                console.log('Upload is ' + progress + '% done for imgs');\r\n                                setMessage('Upload is ' + progress + '% done for imgs');\r\n                                setSuccess(true);\r\n                                setOpenMessage(true);\r\n                            }, function (error) {\r\n                                setMessage('Upload error: ' + error + ' for imgs');\r\n                                setSuccess(false);\r\n                                setOpenMessage(true);\r\n                            }, function () {\r\n                                uploadTask2.snapshot.ref.getDownloadURL().then(function (downloadURL2) {\r\n                                    console.log('File available at', downloadURL2);\r\n                                    ar.imgs.push(downloadURL2);\r\n                                    console.log(imgs.length);\r\n                                    console.log(index);\r\n\r\n                                    if (index === imgs.length - 1) {\r\n                                        if (ar != null) {\r\n                                            console.log(ar);\r\n                                            create(\r\n                                                {\r\n                                                    payload: { data: { ...values, imgs: ar.imgs, imgsmall: ar.imgsmall } },\r\n                                                },\r\n                                                {\r\n                                                    onSuccess: ({ data: newRecord }) => {\r\n                                                        notify('ra.notification.created', 'info', {\r\n                                                            smart_count: 1,\r\n                                                        });\r\n                                                        redirectTo(redirect, basePath, newRecord.id, newRecord);\r\n                                                    },\r\n                                                }\r\n                                            );\r\n                                        }\r\n                                    }\r\n                                    index++;\r\n                                });\r\n                            });\r\n                        })\r\n\r\n                    });\r\n                });\r\n\r\n            },\r\n            [create, notify, redirectTo, basePath, props.imgs, props.imgsmall]\r\n        );\r\n        return <SaveButton {...props} onSave={handleSave} />;\r\n    };\r\n\r\n    const PostEditToolbar = (props) => (\r\n        <Toolbar {...props} >\r\n            <SaveWithImagesButton imgs={imgs} imgsmall={imgsmall} label=\"SALVAR\" />\r\n        </Toolbar>\r\n    );\r\n\r\n    function validateSmallImage(value) {\r\n        console.log(\"TESTE\");\r\n        console.log(value);\r\n        if (typeof value !== 'undefined') {\r\n            console.log(\"333TESTE\");\r\n\r\n            setImgsmall(value[0]);\r\n\r\n        } else {\r\n            setMessage('É necessário uma imagem de capa!');\r\n            setOpenMessage(true);\r\n\r\n\r\n        }\r\n    }\r\n    function validateImages(value) {\r\n        console.log(\"TESTE222\");\r\n        console.log(value);\r\n        if (typeof value !== 'undefined') {\r\n            console.log(\"333TESTE\");\r\n            setImgs(value);\r\n\r\n        } else {\r\n            setMessage('Insira alguma imagem no Post!');\r\n            setOpenMessage(true);\r\n        }\r\n    }\r\n    return (\r\n        <Create {...props}>\r\n            <SimpleForm validate={validatePost} toolbar={<PostEditToolbar imgsmall={imgsmall} imgs={imgs} />}>\r\n                <TextInput disabled source=\"id\" defaultValue={React.useMemo(() => makeID(true), [])} />\r\n                <TextInput source=\"title\" label=\"Título\" />\r\n                <TextInput multiline source=\"content\" label=\"Conteúdo\" />\r\n                <UrlPostEdit validate={validateSmallImage} source=\"imgsmall\" acceptMultiple={false} label=\"Capa do post\" placeholder=\"Arraste a imagem até aqui ou\" />\r\n                <UrlPostEdit validate={validateImages} source=\"imgs\" acceptMultiple={true} label=\"Imagens\" placeholder=\"Arraste as imagens até aqui ou\" />\r\n                <DateInput source=\"date\" label=\"Data\" />\r\n                <BooleanInput source=\"published\" label=\"Público\" defaultValue={false} />\r\n                <Snackbar open={openMessage} autoHideDuration={3000} >\r\n                    <Alert severity={!success ? (\"error\") : (\"success\")}>\r\n                        {message}\r\n                    </Alert>\r\n                </Snackbar>\r\n            </SimpleForm>\r\n        </Create>\r\n    )\r\n};\r\n\r\nexport const EditPost = (props) => {\r\n    const [message, setMessage] = useState('');\r\n    const [openMessage, setOpenMessage] = useState(false);\r\n    const [success, setSuccess] = useState(false);\r\n    const [imgs, setImgs] = useState([]);\r\n    const [removedImgs, setRemovedImgs] = useState([]);\r\n    const [imgsmall, setImgsmall] = useState('');\r\n    console.log(props);\r\n\r\n    function validateSmallImage(value) {\r\n        console.log(\"Teste Imagem\");\r\n        console.log(value);\r\n        if (typeof value !== 'undefined') {\r\n            console.log(\"IMAGEM VALIDADA\");\r\n\r\n            setImgsmall(value[0]);\r\n\r\n        } else {\r\n            setMessage('É necessário uma imagem de capa!');\r\n            setOpenMessage(true);\r\n\r\n\r\n        }\r\n    }\r\n    function validateImages(value) {\r\n        console.log(\"Teste Images\");\r\n        console.log(value);\r\n        if (typeof value !== 'undefined') {\r\n            console.log(\"Teste Images2\");\r\n            setImgs(value);\r\n\r\n        } else {\r\n            setMessage('Insira alguma imagem no Post!');\r\n            setOpenMessage(true);\r\n        }\r\n    }\r\n\r\n    function removeImg(src) {\r\n        let ar = removedImgs;\r\n        ar.push(src);\r\n        setRemovedImgs(ar);\r\n    }\r\n\r\n    function removeFromDB(srcs) {\r\n        console.log(srcs);\r\n        if (Array.isArray(srcs)) {\r\n            srcs.forEach((src) => {\r\n                console.log(src);\r\n                if (typeof src !== 'undefined') {\r\n                    if (src.search('blob:') === -1) {\r\n                        let source = storage.refFromURL(src);\r\n                        source.delete().then(() => {\r\n                            setMessage('Delete Success!');\r\n                            setSuccess(true);\r\n                            setOpenMessage(true);\r\n                        }, (err) => {\r\n                            console.log(err);\r\n                            setMessage('Delete error: ' + err.message_);\r\n                            setSuccess(false);\r\n                            setOpenMessage(true);\r\n                        });\r\n                    }\r\n                }\r\n\r\n            });\r\n        } else if (typeof srcs !== 'undefined' && srcs.search('blob:') === -1) {\r\n            console.log(srcs);\r\n            let source = storage.refFromURL(srcs);\r\n            source.delete().then(() => {\r\n                setMessage('Delete Success!');\r\n                setSuccess(true);\r\n                setOpenMessage(true);\r\n            }, (err) => {\r\n                console.log(err);\r\n                setMessage('Delete error: ' + err.message_);\r\n                setSuccess(false);\r\n                setOpenMessage(true);\r\n            });\r\n\r\n        }\r\n    }\r\n    const SaveWithImagesButton = (props) => {\r\n        const [update] = useUpdate('colecao');\r\n        const redirectTo = useRedirect();\r\n        const notify = useNotify();\r\n        const { basePath } = props;\r\n\r\n        const handleSave = useCallback(\r\n            async function (values, redirect) {\r\n                removeFromDB(removedImgs);\r\n                var imgsmall = props.imgsmall;\r\n                console.log(imgsmall);\r\n                if (imgsmall === undefined || imgsmall === '') {\r\n                    console.log('ttttt');\r\n                    imgsmall = values.imgsmall;\r\n                }\r\n                var imgs = props.imgs;\r\n                if (imgs.length === 0) {\r\n                    imgs = values.imgs;\r\n                }\r\n                console.log(imgsmall);\r\n                console.log(imgs);\r\n                var id = values.id;\r\n                var title = values.title;\r\n                var small = await urlToFile(imgsmall);\r\n                var ar = { imgsmall: imgsmall, imgs: imgs };\r\n\r\n                if (imgsmall.search('blob:') === 0) {\r\n                    console.log(\"tese 1\");\r\n                    const uploadTask = storage.ref(`/colecao/${id}/imgsmall/${title}`)\r\n                        .put(small);\r\n                    uploadTask.on('state_changed', function (snapshot) {\r\n                        var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                        console.log('Upload is ' + progress + '% done for imgsmall');\r\n                        setMessage('Upload is ' + progress + '% done for imgsmall');\r\n                        setSuccess(true);\r\n                        setOpenMessage(true);\r\n                    }, function (error) {\r\n                        setMessage('Upload error: ' + error + ' for imgsmall');\r\n                        setSuccess(false);\r\n                        setOpenMessage(true);\r\n                    }, function () {\r\n                        uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\r\n                            console.log('File available at', downloadURL);\r\n                            ar.imgsmall = downloadURL;\r\n                            var index = 0, isEnter = 0;\r\n                            imgs.forEach(async (e, i) => {\r\n                                if (e.search('blob:') === 0) {\r\n                                    isEnter++;\r\n                                    var img = await urlToFile(e);\r\n                                    var uploadTask2 = storage.ref(`/colecao/${id}/imgs/${title}-${i}`)\r\n                                        .put(img);\r\n                                    uploadTask2.on('state_changed', function (snapshot) {\r\n                                        var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                                        console.log('Upload is ' + progress + '% done for imgs');\r\n                                        setMessage('Upload is ' + progress + '% done for imgs');\r\n                                        setSuccess(true);\r\n                                        setOpenMessage(true);\r\n                                    }, function (error) {\r\n                                        setMessage('Upload error: ' + error + ' for imgs');\r\n                                        setSuccess(false);\r\n                                        setOpenMessage(true);\r\n                                    }, function () {\r\n                                        uploadTask2.snapshot.ref.getDownloadURL().then(function (downloadURL2) {\r\n                                            console.log('File available at', downloadURL2);\r\n                                            ar.imgs.push(downloadURL2);\r\n                                            if (index === imgs.length - 1) {\r\n                                                if (ar != null) {\r\n                                                    console.log(ar);\r\n                                                    update(\r\n                                                        {\r\n                                                            payload: { id: id, data: { ...values, imgs: ar.imgs, imgsmall: ar.imgsmall } },\r\n                                                        },\r\n                                                        {\r\n                                                            onSuccess: ({ data: newRecord }) => {\r\n                                                                notify('ra.notification.updated', 'info', {\r\n                                                                    smart_count: 1,\r\n                                                                });\r\n                                                                redirectTo(redirect, basePath, newRecord.id, newRecord);\r\n                                                            },\r\n                                                        }\r\n                                                    );\r\n                                                }\r\n                                            }\r\n\r\n                                        });\r\n                                    });\r\n                                } index++;\r\n                            }); console.log(isEnter); if (isEnter === 0) {\r\n                                if (ar != null) {\r\n                                    console.log(ar);\r\n                                    update(\r\n                                        {\r\n                                            payload: { id: id, data: { ...values, imgs: ar.imgs, imgsmall: ar.imgsmall } },\r\n                                        },\r\n                                        {\r\n                                            onSuccess: ({ data: newRecord }) => {\r\n                                                notify('ra.notification.updated', 'info', {\r\n                                                    smart_count: 1,\r\n                                                });\r\n                                                redirectTo(redirect, basePath, newRecord.id, newRecord);\r\n                                            },\r\n                                        }\r\n                                    );\r\n                                }\r\n                            }\r\n\r\n                        });\r\n                    });\r\n                } else {\r\n                    console.log(\"tese 2\");\r\n                    var index = 0, newImgs = [];\r\n                    imgs.forEach(async (e, i) => {\r\n                        console.log(e.search('blob:'));\r\n                        if (e.search('blob:') === 0) {\r\n                            var img = await urlToFile(e);\r\n                            var uploadTask2 = storage.ref(`/colecao/${id}/imgs/${title}-${i}`)\r\n                                .put(img);\r\n                            uploadTask2.on('state_changed', function (snapshot) {\r\n                                // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n                                var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                                console.log('Upload is ' + progress + '% done for imgs');\r\n                                setMessage('Upload is ' + progress + '% done for imgs');\r\n                                setSuccess(true);\r\n                                setOpenMessage(true);\r\n                            }, function (error) {\r\n                                setMessage('Upload error: ' + error + ' for imgs');\r\n                                setSuccess(false);\r\n                                setOpenMessage(true);\r\n                            }, function () {\r\n                                uploadTask2.snapshot.ref.getDownloadURL().then(function (downloadURL2) {\r\n                                    console.log('File available at', downloadURL2);\r\n                                    ar.imgs.push(downloadURL2);\r\n                                    console.log(imgs.length);\r\n                                    console.log(index);\r\n\r\n                                    if (index === imgs.length - 1) {\r\n                                        if (ar != null) {\r\n                                            console.log(ar);\r\n                                            ar.imgs = ar.imgs.filter((e) => { return e.search('blob:') === -1 });\r\n                                            update(\r\n                                                {\r\n                                                    payload: { id: id, data: { ...values, imgs: ar.imgs, imgsmall: ar.imgsmall } },\r\n                                                },\r\n                                                {\r\n                                                    onSuccess: ({ data: newRecord }) => {\r\n                                                        notify('ra.notification.updated', 'info', {\r\n                                                            smart_count: 1,\r\n                                                        });\r\n                                                        redirectTo(redirect, basePath, newRecord.id, newRecord);\r\n                                                    },\r\n                                                }\r\n                                            );\r\n                                        }\r\n                                    }\r\n\r\n                                });\r\n                            });\r\n                            index++;\r\n                        } else {\r\n                            newImgs.push(e);\r\n                        }\r\n                    }); console.log(index); if (index === 0) {\r\n                        if (ar != null) {\r\n                            console.log(ar);\r\n                            update(\r\n                                {\r\n                                    payload: { id: id, data: { ...values, imgs: newImgs, imgsmall: ar.imgsmall } },\r\n                                },\r\n                                {\r\n                                    onSuccess: ({ data: newRecord }) => {\r\n                                        notify('ra.notification.updated', 'info', {\r\n                                            smart_count: 1,\r\n                                        });\r\n                                        redirectTo(redirect, basePath, newRecord.id, newRecord);\r\n                                    },\r\n                                }\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n\r\n            },\r\n            [update, notify, redirectTo, basePath, props.imgs, props.imgsmall]\r\n        );\r\n\r\n        // override handleSubmitWithRedirect with custom logic\r\n        return <SaveButton {...props} onSave={handleSave} />;\r\n    };\r\n\r\n    const PostEditToolbar = (props) => (\r\n        <Toolbar {...props} >\r\n            <SaveWithImagesButton imgs={imgs} imgsmall={imgsmall} label=\"SALVAR\" />\r\n            <CustomDeleteButton id={props.id}/>\r\n        </Toolbar>\r\n    );\r\n\r\n    function setImgSmallState(e) {\r\n        setImgsmall(e);\r\n    }\r\n    function setImgsState(e) {\r\n        setImgs(e);\r\n    }\r\n    return (\r\n        <Edit {...props}>\r\n            <SimpleForm toolbar={<PostEditToolbar imgsmall={imgsmall} imgs={imgs} />}>\r\n                <TextInput disabled source=\"id\" />\r\n                <TextInput source=\"title\" label=\"Título\" />\r\n                <TextInput multiline source=\"content\" label=\"Conteúdo\" />\r\n                <UrlPostEdit validate={validateSmallImage} setImgState={setImgSmallState} removeImage={removeImg} source=\"imgsmall\" acceptMultiple={false} label=\"Capa do post\" placeholder=\"Arraste a imagem até aqui ou\" />\r\n                <UrlPostEdit validate={validateImages} setImgState={setImgsState} removeImage={removeImg} source=\"imgs\" acceptMultiple={true} label=\"Imagens\" placeholder=\"Arraste as imagens até aqui ou\" />\r\n                <DateInput source=\"date\" label=\"Data\" />\r\n                <BooleanInput source=\"published\" label=\"Publicar\" />\r\n                <DateInput disabled source=\"lastupdate\" label=\"Atualizado em\" />\r\n                <Snackbar open={openMessage} autoHideDuration={3000} >\r\n                    <Alert severity={!success ? (\"error\") : (\"success\")}>\r\n                        {message}\r\n                    </Alert>\r\n                </Snackbar>\r\n            </SimpleForm>\r\n        </Edit>\r\n    )\r\n};","import React,{useState,useEffect} from 'react';\r\n\r\nexport default function UrlPost({ record = {}, source }){\r\n    \r\n    const [imgs,setImgs]=useState([]);\r\n\r\n    useEffect(()=>{\r\n\r\n      if(record[source]){\r\n      if(typeof record[source] !== 'object'){\r\n          var ar=[record[source]];\r\n              setImgs(ar);\r\n      }else{\r\n          setImgs(Object.values(record[source]));\r\n      }}   \r\n\r\n    },[record,source]);\r\n\r\n    return(\r\n        <>\r\n        {imgs.map((e,i)=>\r\n          <div className=\"urlPost\" key={i}><a href={e.src} >{i}</a></div>\r\n        )}\r\n        </>\r\n    );\r\n}\r\n","import React, { useState, useCallback, useEffect, Fragment } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\n\r\nexport default function UrlGaleriaEdit({ record = {}, source, setImgState, acceptMultiple, label, placeholder, validate, removeImage }) {\r\n\r\n    const [imgs, setImgs] = useState([]);\r\n    useEffect(() => {\r\n        var isCancelled = false;\r\n        function setImagens() {\r\n            var ar;\r\n            if (record[source]) {\r\n                if (typeof record[source] !== 'object') {\r\n                    ar = [record[source]];\r\n                    if (!isCancelled) {\r\n                        setImgs(ar);\r\n                    }\r\n                } else {\r\n                    ar = Object.values(record[source]);\r\n                    if (!isCancelled) {\r\n                        setImgs(ar);\r\n                    }\r\n                }\r\n            }\r\n            console.log(record);\r\n        }\r\n        setImagens();\r\n        return () => {\r\n            isCancelled = true;\r\n        };\r\n    }, [record, source]);\r\n\r\n    const onDrop = useCallback(acceptedFiles => {\r\n        var ar = imgs;\r\n        console.log(ar);\r\n        acceptedFiles.forEach(file => {\r\n            if (acceptMultiple) {\r\n                ar.push({ \"src\": URL.createObjectURL(file) });\r\n            } else {\r\n                ar = [URL.createObjectURL(file)];\r\n            }\r\n        });\r\n        setImgs(ar);\r\n        if (setImgState) {\r\n            setImgState(ar);\r\n        }\r\n        if (typeof validate !== 'undefined') {\r\n            validate(ar);\r\n        }\r\n        console.log(ar);\r\n    }, [imgs, validate, setImgState, acceptMultiple]);\r\n\r\n    const handleTitleChange=(e,i)=>{\r\n        var ar=imgs;\r\n        console.log(e.target.value);\r\n        ar[i].title=e.target.value;\r\n        \r\n    }\r\n\r\n    function removeImg(i) {\r\n        var ar = imgs;\r\n        removeImage(imgs[i]);\r\n        ar.splice(i, 1)\r\n        setImgs(ar);\r\n        if (setImgState) {\r\n            setImgState(ar);\r\n        }\r\n    }\r\n\r\n    const { getRootProps, getInputProps, open, isDragActive } = useDropzone({ accept: 'image/*', multiple: acceptMultiple, noClick: true, onDrop });\r\n\r\n    return (\r\n        <>\r\n            <label className=\"MuiFormLabel-root MuiInputLabel-root  \">\r\n                <span>{label}</span></label>\r\n            <div {...getRootProps()} className=\"UrlPostEditContainer\">\r\n                <input {...getInputProps()} />\r\n                {\r\n                    isDragActive ?\r\n                        <p>{placeholder}</p> :\r\n                        <>\r\n                            <p>{placeholder}</p>\r\n                            <button type=\"button\" onClick={open}>Clique para selecionar</button>\r\n                        </>\r\n                }\r\n                <div className=\"preview\">\r\n                    {typeof imgs === 'object' && imgs.map((e, i) =>\r\n                        <Fragment key={i}>\r\n                            {acceptMultiple ? (\r\n                                <div className=\"imageContainer\" >\r\n                                    <img alt=\"imagem\" src={e.src} className=\"imgEdit\" />\r\n                                    <input className=\"imgGaleriaTitle\" type=\"text\" placeholder=\"Título para a imagem\" onChange={(el)=>handleTitleChange(el,i)} defaultValue={e.title} />\r\n                                    <span className=\"btnDeleteImage\" onClick={() => removeImg(i)}>X</span></div>) : (\r\n                                    <div className=\"imageContainer\" key={i}>\r\n                                        <img alt=\"imagem\" src={e} className=\"imgEdit\" />\r\n                                        <span className=\"btnDeleteImage\" onClick={() => removeImg(i)}>X</span></div>)}\r\n                        </Fragment>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","import React, { useState, useCallback,Fragment } from 'react';\r\nimport {List,Edit, Filter,Datagrid, useMutation,EditButton, TextField, ImageField,BooleanField, Create, SimpleForm, TextInput, BooleanInput, Toolbar, SaveButton, useCreate, useRedirect, useNotify,useUpdate } from 'react-admin';\r\nimport { useMediaQuery , ListItem, ListItemText ,Button as ButtonMui } from '@material-ui/core';\r\nimport useLongPress from './useLongPress';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport UrlGaleria from './UrlGaleria';\r\nimport UrlGaleriaEdit from './UrlGaleriaEdit';\r\nimport { Snackbar } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\nimport { storage } from \"./firebaseLoad\";\r\n\r\nasync function urlToFile(url) {\r\n    return fetch(url).then(r => r.blob());\r\n}\r\n\r\nconst validateGaleria = (values) => {\r\n    const errors = {};\r\n    if (!values.name) {\r\n        errors.name = ['É necessário preencher o nome'];\r\n    }\r\n    return errors;\r\n};\r\n\r\nconst GaleriaFilter = (props) => (\r\n    <Filter {...props}>\r\n        <TextInput label=\"Pesquisar\" source=\"name\" alwaysOn />\r\n    </Filter>\r\n);\r\n\r\nconst CustomDeleteButton = (props) => {\r\n    console.log(props);\r\n    const [deleteAction, { loading }] = useMutation({\r\n        type: 'delete',\r\n        resource: 'galeria',\r\n        payload: { id: props.id}\r\n    });\r\n    console.log(loading);\r\n    return <ButtonMui startIcon={<DeleteIcon />} onClick={deleteAction} variant=\"contained\" className=\"deleteButton\" disabled={loading}>Excluir</ButtonMui>;\r\n};\r\n\r\nconst CustomList = ({ ids, data,basePath,handleLongPress,setId}) => {\r\n    const backspaceLongPress = useLongPress(() => handleLongPress(true), 500);\r\n    function handleMouseDown(e) {\r\n        console.log(e);\r\n        setId(e)\r\n        backspaceLongPress.onMouseDown();\r\n    }\r\n    function handleTouchStart(e) {\r\n        console.log(e);\r\n        setId(e)\r\n        backspaceLongPress.onTouchStart();\r\n    }\r\n    return(\r\n    <div style={{ margin: '1em' }}>\r\n        {ids.map(id =>\r\n            <ListItem key={id} onMouseDown={()=>handleMouseDown(id)}\r\n            onMouseUp={()=>backspaceLongPress.onMouseUp()}\r\n            onMouseLeave={()=>backspaceLongPress.onMouseLeave()}\r\n            onTouchStart={()=>handleTouchStart(id)}\r\n            onTouchEnd={()=>backspaceLongPress.onTouchEnd()}>\r\n                <ListItemText multiline=\"true\" primary={<TextField source=\"name\" record={data[id]} />}\r\n                    secondary={`${data[id].published ? (\"Publicado\") : (\"Não Publicado\")}`}/>\r\n                <ListItemText multiline=\"true\" primary={`${new Date(data[id].lastupdate).toLocaleDateString()}`}/>\r\n                <EditButton resource=\"colecao\" basePath={basePath} record={data[id]} />\r\n            </ListItem>\r\n        )}\r\n    </div>\r\n)};\r\nCustomList.defaultProps = {\r\n    data: {},\r\n    ids: [],\r\n};\r\n\r\nexport const ListGaleria=(props)=>{\r\n    const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\r\n    const [showDialog, setShowDialog] = useState(false);\r\n    const [id, setId] = useState('');\r\n    function handleLongPress(e) {\r\n        console.log(\"LONG PRESS\");\r\n\r\n        setShowDialog(e);\r\n    }\r\n    function handleSetId(newId){\r\n        setId(newId);\r\n    }\r\n    return(\r\n        <Fragment>\r\n        <Dialog\r\n            fullWidth\r\n            open={showDialog}\r\n            onClose={() => handleLongPress(false)}\r\n            aria-label=\"Excluir post\"\r\n        >\r\n            <DialogTitle>Deseja excluir este card da galeria?</DialogTitle>\r\n            <DialogActions>\r\n                <CustomDeleteButton id={id} />\r\n            </DialogActions>\r\n        </Dialog>\r\n    <List {...props} title=\"Galeria\" filters={<GaleriaFilter />}>\r\n        {isSmall ? (\r\n                <CustomList handleLongPress={handleLongPress} setId={handleSetId}/>\r\n            ) : (\r\n        <Datagrid rowClick=\"edit\">\r\n            <TextField source=\"id\" />\r\n            <TextField source=\"name\" label=\"Nome\"/>\r\n            <ImageField source=\"imgsmall\" label=\"Capa\"/>\r\n            <UrlGaleria source=\"imgs\" label=\"Imagens\"/> \r\n            <BooleanField source=\"published\" label=\"Publicar\"/>\r\n        </Datagrid>\r\n            )}\r\n    </List>\r\n    </Fragment>\r\n)};\r\n\r\n\r\nexport const EditGaleria=(props)=> {\r\n    const [message, setMessage] = useState('');\r\n    const [openMessage, setOpenMessage] = useState(false);\r\n    const [success, setSuccess] = useState(false);\r\n    const [imgs, setImgs] = useState([]);\r\n    const [imgsmall, setImgsmall] = useState('');\r\n    const [removedImgs, setRemovedImgs] = useState([]);\r\n    console.log(props);\r\n    function validateImages(value) {\r\n        console.log(value);\r\n        if (typeof value !== 'undefined') {\r\n            console.log(\"IMAGENS VALIDADAS\");\r\n            setImgs(value);\r\n        } else {\r\n            setMessage('Insira alguma imagem no Post!');\r\n            setOpenMessage(true);\r\n        }\r\n    }\r\n\r\n    function removeImg(src) {\r\n        let ar = removedImgs;\r\n        ar.push(src);\r\n        setRemovedImgs(ar);\r\n    }\r\n\r\n    function removeFromDB(srcs) {\r\n\r\n        if (Array.isArray(srcs)) {\r\n            srcs.forEach((e) => {\r\n                \r\n                if(typeof e.src !== 'undefined' && e.src.search('blob:') === -1){\r\n                let source = storage.refFromURL(e.src);\r\n                source.delete().then(() => {\r\n                    setMessage('Delete Success!');\r\n                    setSuccess(true);\r\n                    setOpenMessage(true);\r\n                }, (err) => {\r\n                    setMessage('Delete error: ' + err);\r\n                    setSuccess(false);\r\n                    setOpenMessage(true);\r\n                });\r\n                 }\r\n            });\r\n        } else if (typeof srcs !== 'undefined' && srcs.search('blob:') === -1) {\r\n            console.log(srcs);\r\n            let source = storage.refFromURL(srcs);\r\n            source.delete().then(() => {\r\n                setMessage('Delete Success!');\r\n                setSuccess(true);\r\n                setOpenMessage(true);\r\n            }, (err) => {\r\n                setMessage('Delete error: ' + err);\r\n                setSuccess(false);\r\n                setOpenMessage(true);\r\n            });\r\n\r\n        }\r\n    }\r\n    const SaveWithImagesButton = (props) => {\r\n        const [update] = useUpdate('galeria');\r\n        const redirectTo = useRedirect();\r\n        const notify = useNotify();\r\n        const { basePath } = props;\r\n\r\n        const handleSave = useCallback(\r\n            async function (values, redirect) {\r\n                removeFromDB(removedImgs); \r\n                var imgsmall = values.imgsmall;\r\n                console.log(imgsmall);\r\n                if(imgsmall === undefined || imgsmall===''){\r\n                    console.log('ttttt');\r\n                   imgsmall=props.imgsmall;\r\n                } \r\n                var imgs = props.imgs;\r\n                if(imgs.length===0){\r\n                    imgs=values.imgs;\r\n                } \r\n                console.log(imgs);\r\n                var id = values.id;\r\n                var name = values.name;\r\n                var small = await urlToFile(imgsmall);\r\n                var ar = { imgs: imgs,imgsmall: imgsmall }, index = 0;\r\n                console.log(ar);\r\n                if (imgsmall.search('blob:') === 0) {\r\n                    console.log(\"tese 1\");\r\n                    const uploadTask = storage.ref(`/galeria/${id}/imgsmall/${name}`)\r\n                        .put(small);\r\n                    uploadTask.on('state_changed', function (snapshot) {\r\n                        var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                        console.log('Upload is ' + progress + '% done for imgsmall');\r\n                        setMessage('Upload is ' + progress + '% done for imgsmall');\r\n                        setSuccess(true);\r\n                        setOpenMessage(true);\r\n                    }, function (error) {\r\n                        setMessage('Upload error: ' + error + ' for imgsmall');\r\n                        setSuccess(false);\r\n                        setOpenMessage(true);\r\n                    }, function () {\r\n                        uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\r\n                            console.log('File available at', downloadURL);\r\n                            ar.imgsmall = downloadURL;\r\n                            var index = 0,isEnter=0;\r\n                            imgs.forEach(async (e, i) => { \r\n                                if (e.src.search('blob:') === 0) { isEnter++;\r\n                                    var img = await urlToFile(e.src);\r\n                                    var uploadTask2 = storage.ref(`/galeria/${id}/imgs/${name}-${i}`)\r\n                                        .put(img);\r\n                                    uploadTask2.on('state_changed', function (snapshot) {\r\n                                        var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                                        console.log('Upload is ' + progress + '% done for imgs');\r\n                                        setMessage('Upload is ' + progress + '% done for imgs');\r\n                                        setSuccess(true);\r\n                                        setOpenMessage(true);\r\n                                    }, function (error) {\r\n                                        setMessage('Upload error: ' + error + ' for imgs');\r\n                                        setSuccess(false);\r\n                                        setOpenMessage(true);\r\n                                    }, function () {\r\n                                        uploadTask2.snapshot.ref.getDownloadURL().then(function (downloadURL2) {\r\n                                            console.log('File available at', downloadURL2);\r\n                                            ar.imgs.push({src: downloadURL2,title:e.title});\r\n                                            if (index === imgs.length - 1) {\r\n                                                if (ar != null) {\r\n                                                    console.log(ar);\r\n                                                    update(\r\n                                                        {\r\n                                                            payload: { id: id, data: { ...values, imgs: ar.imgs, imgsmall: ar.imgsmall } },\r\n                                                        },\r\n                                                        {\r\n                                                            onSuccess: ({ data: newRecord }) => {\r\n                                                                notify('ra.notification.updated', 'info', {\r\n                                                                    smart_count: 1,\r\n                                                                });\r\n                                                                redirectTo(redirect, basePath, newRecord.id, newRecord);\r\n                                                            },\r\n                                                        }\r\n                                                    );\r\n                                                }\r\n                                            }\r\n\r\n                                        });\r\n                                    });\r\n                                } index++;\r\n                            }); console.log(isEnter); if(isEnter===0){\r\n                                if (ar != null) {\r\n                                    console.log(ar);\r\n                                    update(\r\n                                        {\r\n                                            payload: { id: id, data: { ...values, imgs: ar.imgs, imgsmall: ar.imgsmall } },\r\n                                        },\r\n                                        {\r\n                                            onSuccess: ({ data: newRecord }) => {\r\n                                                notify('ra.notification.updated', 'info', {\r\n                                                    smart_count: 1,\r\n                                                });\r\n                                                redirectTo(redirect, basePath, newRecord.id, newRecord);\r\n                                            },\r\n                                        }\r\n                                    );\r\n                                }\r\n                            }\r\n\r\n                        });\r\n                    });\r\n                } else {\r\n                    var isEnter=0;\r\n                    imgs.forEach(async (e, i) => {\r\n                        console.log(e.src.search('blob:'));\r\n                        if (e.src.search('blob:') === 0) { isEnter++;\r\n                            var img = await urlToFile(e.src);\r\n                            var uploadTask2 = storage.ref(`/galeria/${id}/imgs/${name}-${i}`)\r\n                                .put(img);\r\n                            uploadTask2.on('state_changed', function (snapshot) {\r\n                                var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                                console.log('Upload is ' + progress + '% done for imgs');\r\n                                setMessage('Upload is ' + progress + '% done for imgs');\r\n                                setSuccess(true);\r\n                                setOpenMessage(true);\r\n                            }, function (error) {\r\n                                setMessage('Upload error: ' + error + ' for imgs');\r\n                                setSuccess(false);\r\n                                setOpenMessage(true);\r\n                            }, function () {\r\n                                uploadTask2.snapshot.ref.getDownloadURL().then(function (downloadURL2) {\r\n                                    console.log('File available at', downloadURL2);\r\n                                    ar.imgs.push({src:downloadURL2,title:e.title});\r\n                                    console.log(imgs.length);\r\n                                    console.log(index);\r\n                                    if (index === imgs.length - 1) {\r\n                                        if (ar != null) {\r\n                                            console.log(ar);\r\n                                            ar.imgs = ar.imgs.filter((e) => { return e.src.search('blob:') === -1 });\r\n                                            update(\r\n                                                {\r\n                                                    payload: { id: id, data: { ...values, imgs: ar.imgs } },\r\n                                                },\r\n                                                {\r\n                                                    onSuccess: ({ data: newRecord }) => {\r\n                                                        notify('ra.notification.updated', 'info', {\r\n                                                            smart_count: 1,\r\n                                                        });\r\n                                                        redirectTo(redirect, basePath, newRecord.id, newRecord);\r\n                                                    },\r\n                                                }\r\n                                            );\r\n                                        }\r\n                                    }\r\n\r\n                                });\r\n                            });\r\n                        } index++;\r\n                    }); console.log(isEnter); if(isEnter===0){\r\n                        if (ar != null) {\r\n                            console.log(ar);\r\n                            update(\r\n                                {\r\n                                    payload: { id: id, data: { ...values, imgs: ar.imgs, imgsmall: ar.imgsmall } },\r\n                                },\r\n                                {\r\n                                    onSuccess: ({ data: newRecord }) => {\r\n                                        notify('ra.notification.updated', 'info', {\r\n                                            smart_count: 1,\r\n                                        });\r\n                                        redirectTo(redirect, basePath, newRecord.id, newRecord);\r\n                                    },\r\n                                }\r\n                            );\r\n                        }\r\n                    }\r\n                }\r\n            },[update, notify, redirectTo, basePath, props.imgs,props.imgsmall]\r\n        );\r\n        return <SaveButton {...props} onSave={handleSave} />;\r\n    };\r\n\r\n    const GaleriaEditToolbar = (props) => (\r\n        <Toolbar {...props} >\r\n            <SaveWithImagesButton imgs={imgs} imgsmall={imgsmall} label=\"SALVAR\"/>\r\n            <CustomDeleteButton id={props.id}/>\r\n        </Toolbar>\r\n    );\r\n    function setImgSmallState(e) {\r\n        setImgsmall(e);\r\n    }\r\n    function setImgsState(e) {\r\n        setImgs(e);\r\n    }\r\n\r\n    function validateSmallImage(value) {\r\n        console.log(value);\r\n        if (typeof value !== 'undefined') {\r\n            console.log(\"IMAGEM VALIDADA\");\r\n            setImgsmall(value[0]);\r\n        } else {\r\n            setMessage('É necessário uma imagem de capa!');\r\n            setOpenMessage(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Edit {...props}>\r\n            <SimpleForm toolbar={<GaleriaEditToolbar imgs={imgs} />}>\r\n                <TextInput disabled source=\"id\" />\r\n                <TextInput source=\"name\" label=\"Nome\"/>\r\n                <UrlGaleriaEdit validate={validateSmallImage} setImgState={setImgSmallState} removeImage={removeImg} source=\"imgsmall\" acceptMultiple={false} label=\"Capa\" placeholder=\"Arraste a imagem até aqui ou\" />\r\n                <UrlGaleriaEdit validate={validateImages} setImgState={setImgsState} removeImage={removeImg} source=\"imgs\" acceptMultiple={true} label=\"Imagens\" placeholder=\"Arraste as imagens até aqui ou\" />\r\n                <BooleanInput source=\"published\" label=\"Publicado\"/>\r\n                <Snackbar open={openMessage} autoHideDuration={3000} >\r\n                    <Alert severity={!success ? (\"error\") : (\"success\")}>\r\n                        {message}\r\n                    </Alert>\r\n                </Snackbar>\r\n            </SimpleForm>\r\n        </Edit>\r\n    )\r\n};\r\n\r\n\r\nexport const CreateGaleria=(props)=> {\r\n\r\n    const [message, setMessage] = useState('');\r\n    const [openMessage, setOpenMessage] = useState(false);\r\n    const [success, setSuccess] = useState(false);\r\n    const [imgs, setImgs] = useState([]);\r\n    const [imgsmall, setImgsmall] = useState('');\r\n\r\n    var makeID = function (toSet) {\r\n        var newId = Math.random().toString(36).substr(2, 9);\r\n        return newId;\r\n    };\r\n\r\n    const SaveWithImagesButton = (props) => {\r\n        const [create] = useCreate('galeria');\r\n        const redirectTo = useRedirect();\r\n        const notify = useNotify();\r\n        const { basePath } = props;\r\n\r\n        const handleSave = useCallback(\r\n            async function (values, redirect) {\r\n                console.log(values);\r\n                console.log(props.imgs);\r\n                var imgs = props.imgs;\r\n                var name = values.name;\r\n                var id = values.id;\r\n                var titles = [];\r\n                var small = await urlToFile(props.imgsmall);\r\n                var ar = { imgs: [],imgsmall:'' }, index = 0;\r\n                const uploadTask = storage.ref(`/galeria/${id}/imgsmall/${name}`)\r\n                    .put(small);\r\n                uploadTask.on('state_changed', function (snapshot) {\r\n                    var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                    console.log('Upload is ' + progress + '% done for imgsmall');\r\n                    setMessage('Upload is ' + progress + '% done for imgsmall');\r\n                    setSuccess(true);\r\n                    setOpenMessage(true);\r\n                }, function (error) {\r\n                    setMessage('Upload error: ' + error + ' for imgsmall');\r\n                    setSuccess(false);\r\n                    setOpenMessage(true);\r\n                }, function () {\r\n                    uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\r\n                        console.log('File available at', downloadURL);\r\n                        ar.imgsmall = downloadURL;\r\n                imgs.forEach(async (e, i) => {\r\n                    var img = await urlToFile(e.src);\r\n                    titles.push(e.title);\r\n                    var uploadTask2 = storage.ref(`/galeria/${id}/imgs/${name}-${i}`)\r\n                        .put(img);\r\n                    uploadTask2.on('state_changed', function (snapshot) {\r\n                        var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                        console.log('Upload is ' + progress + '% done for imgs');\r\n                        setMessage('Upload is ' + progress + '% done for imgs');\r\n                        setSuccess(true);\r\n                        setOpenMessage(true);\r\n                    }, function (error) {\r\n                        setMessage('Upload error: ' + error + ' for imgs');\r\n                        setSuccess(false);\r\n                        setOpenMessage(true);\r\n                    }, function () {\r\n                        uploadTask2.snapshot.ref.getDownloadURL().then(function (downloadURL2) {\r\n                            console.log('File available at', downloadURL2);\r\n                            ar.imgs.push({ src: downloadURL2, title: e.title });\r\n                            console.log(imgs.length);\r\n                            console.log(ar);\r\n                            console.log(\"index: \"+index);\r\n                            if (index === imgs.length) {\r\n                                if (ar != null) {\r\n                                    console.log(ar);\r\n                                    create(\r\n                                        {\r\n                                            payload: { data: { ...values, imgs: ar.imgs,imgsmall:ar.imgsmall } },\r\n                                        },\r\n                                        {\r\n                                            onSuccess: ({ data: newRecord }) => {\r\n                                                notify('ra.notification.created', 'info', {\r\n                                                    smart_count: 1,\r\n                                                });\r\n                                                redirectTo(redirect, basePath, newRecord.id, newRecord);\r\n                                            },\r\n                                        }\r\n                                    );\r\n                                }\r\n                            }\r\n\r\n                        });\r\n                    }); index++;\r\n                });});});\r\n            }, [create, notify, redirectTo, basePath, props.imgs,props.imgsmall]\r\n        );\r\n        return <SaveButton {...props} onSave={handleSave} />;\r\n    };\r\n\r\n    const GaleriaEditToolbar = (props) => (\r\n        <Toolbar {...props} >\r\n            <SaveWithImagesButton imgs={imgs} imgsmall={imgsmall} label=\"SALVAR\"/>\r\n        </Toolbar>\r\n    );\r\n\r\n    function validateImages(value) {\r\n        if (typeof value !== 'undefined') {\r\n            console.log(\"IMAGENS VALIDADAS\");\r\n            setImgs(value);\r\n        } else {\r\n            setMessage('Insira alguma imagem no Post!');\r\n            setOpenMessage(true);\r\n        }\r\n    }\r\n\r\n    function validateSmallImage(value) {\r\n        console.log(value);\r\n        if (typeof value !== 'undefined') {\r\n            console.log(\"IMAGEM VALIDADA\");\r\n\r\n            setImgsmall(value[0]);\r\n\r\n        } else {\r\n            setMessage('É necessário uma imagem de capa!');\r\n            setOpenMessage(true);\r\n\r\n\r\n        }\r\n    }\r\n    return (\r\n        <Create {...props}>\r\n            <SimpleForm validate={validateGaleria} toolbar={<GaleriaEditToolbar imgs={imgs} />}>\r\n                <TextInput disabled source=\"id\" defaultValue={React.useMemo(() => makeID(true), [])} />\r\n                <TextInput source=\"name\" label=\"Nome\" />\r\n                <UrlGaleriaEdit validate={validateSmallImage} source=\"imgsmall\" acceptMultiple={false} label=\"Capa\" placeholder=\"Arraste a imagem até aqui ou\" />\r\n                <UrlGaleriaEdit validate={validateImages} source=\"imgs\" acceptMultiple={true} label=\"Imagens\" placeholder=\"Arraste as imagens até aqui ou\" />\r\n                <BooleanInput source=\"published\" label=\"Público\" defaultValue={false} />\r\n                <Snackbar open={openMessage} autoHideDuration={3000} >\r\n                    <Alert severity={!success ? (\"error\") : (\"success\")}>\r\n                        {message}\r\n                    </Alert>\r\n                </Snackbar>\r\n            </SimpleForm>\r\n        </Create>\r\n    )\r\n};","import React from 'react';\nimport { Admin, Resource} from 'react-admin';\nimport {FirebaseAuthProvider,FirebaseDataProvider} from 'react-admin-firebase';\nimport CustomLoginPage from './components/CustomLoginPage';\nimport {ListPost,CreatePost,EditPost} from './components/Post';\nimport {ListGaleria,CreateGaleria,EditGaleria} from './components/Galeria';\nimport GaleriaIcon from '@material-ui/icons/Book';\nimport ptBrMessages from 'ra-language-pt-br';\nimport polyglotI18nProvider from 'ra-i18n-polyglot';\nimport './index.css';\n\n\n\nconst config = {\n  apiKey: \"AIzaSyD46nX4-Ks9WMiQ1hazUe2PZAkGX_Cq7kQ\",\n  authDomain: \"altiereescultor.firebaseapp.com\",\n  databaseURL: \"https://altiereescultor.firebaseio.com\",\n  projectId: \"altiereescultor\",\n  storageBucket: \"altiereescultor.appspot.com\",\n  messagingSenderId: \"851171901718\",\n  appId: \"1:851171901718:web:3f1bf7c3d4867dc7d25037\",\n  measurementId: \"G-D5SPTWZ2H0\"\n};\n\nconst options = {\n  logging: true,\n};\n\nconst dataProvider = FirebaseDataProvider(config, options);\nconst authProvider = FirebaseAuthProvider(config, options);\nconst i18nProvider = polyglotI18nProvider(() => ptBrMessages, 'pt-br');\n\nconst App = () => (\n      <Admin dataProvider={dataProvider}\n             loginPage={CustomLoginPage}\n             authProvider={authProvider}\n             i18nProvider={i18nProvider}>\n         <Resource name=\"galeria\" options={{ label: 'Galeria' }} list={ListGaleria} edit={EditGaleria} create={CreateGaleria} icon={GaleriaIcon}/>\n         <Resource name=\"colecao\" options={{ label: 'Posts' }}   list={ListPost} edit={EditPost} create={CreatePost} />\n      </Admin>\n  );\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n \n    <App />\n  \n  ,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}